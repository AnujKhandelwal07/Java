package Utility;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class Collection02 {
	public static void main(String [] args) throws IOException
	{
		List<String> arrList = new ArrayList<String>();
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		System.out.println("Enter the data: ");
		
		String line = "";
		
		while (!(line = br.readLine()).equals("stop"))
		{
			arrList.add(line);
		}
		
		System.out.println("List is " +arrList);
		System.out.println();
		
		System.out.println("Number of elements:" + arrList.size());
		System.out.println();
		
		System.out.println("b> Values Using Advance For Loop");
		System.out.println();
		
		for(String s : arrList) {
			System.out.println(s);
		}
		
		System.out.println();
		System.out.println("C> Values Using Iterators");
		
		Iterator<String> itr = arrList.iterator();
		
		while(itr.hasNext())
			System.out.println(itr.next());
		
		
		System.out.println();
		System.out.println("d> Values Using ListIterators");
		
		ListIterator <String> li = arrList.listIterator();
		
		while(li.hasNext())
			li.next();
		
		while(li.hasPrevious())
			System.out.println(li.previous());
		
		System.out.println();
		System.out.println("f> Sort the list");
		
		Collections.sort(arrList);
		System.out.println(arrList);
		
		System.out.println();
		System.out.println("g> List in reverse order");
		
		Collections.reverse(arrList);
		System.out.println(arrList);
		
		br = new BufferedReader(new InputStreamReader(System.in));
		
		System.out.println();
		System.out.println("Enter the String you want to find: ");
		
		String find = br.readLine();
		
		System.out.println();
		System.out.println("h> String is present or not");
		
		if(arrList.contains(find))
		{
			System.out.println("It is found on index: " + arrList.indexOf(find));
		}
		else {
			System.out.println("Not Found");
		}
	}
}	
